# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление. Числа запрашивать у
# пользователя, предусмотреть обработку ситуации деления на ноль.


def division():
    try:
        a = int(input('Введите число a: '))
        b = int(input('Введите число b: '))
        return a / b
    except ZeroDivisionError:
        return 'На ноль делить нельзя'


print(division())


#
#
#
#

# 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы. Реализовать вывод
# данных о пользователе одной строкой.

def user_data(name, surname, year_of_birth, current_city, email, phone_number):
    return f'Имя: {name} / Фамилия: {surname} / Год рождения: {year_of_birth} / Город проживания: {current_city} / ' \
           f'Email: {email} / Номер телефона: {phone_number}'


u_data = user_data(
    name=input('Имя: '),
    surname=input('Фамилия'),
    year_of_birth=int(input('Год рождения')),
    current_city=input('Город проживания: '),
    email=input('Email'),
    phone_number=input('Номер телефона'))

print(u_data)


#
#
#
#

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и возвращает сумму наибольших
# двух аргументов.

def my_func(arg1, arg2, arg3):
    arg_list = [arg1, arg2, arg3]
    max_list = []
    max_arg1 = max(arg_list)
    max_list.append(max_arg1)
    arg_list.remove(max_arg1)
    max_arg2 = max(arg_list)
    max_list.append(max_arg2)
    return sum(max_list)


print(my_func(
    arg1=int(input('Число a')),
    arg2=int(input('Число b')),
    arg3=int(input('Число c')))
)


#
#
#
#

# 4. Программа принимает действительное положительное число x и целое отрицательное число y. Необходимо выполнить
# возведение числа x в степень y. Задание необходимо реализовать в виде функции my_func(x, y). При решении задания
# необходимо обойтись без встроенной функции возведения числа в степень.


def my_func(x, y):
    return 1 / x ** abs(y)

function_call = my_func(float(input('Действительное положительное число')), int(input('Целое отрицательное число')))
print(function_call)

#
#
#
#

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом. При нажатии Enter должна выводиться
# сумма чисел. Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter. Сумма вновь
# введенных чисел будет добавляться к уже подсчитанной сумме. Но если вместо числа вводится специальный символ,
# выполнение программы завершается. Если специальный символ введен после нескольких чисел, то вначале нужно добавить
# сумму этих чисел к полученной ранее сумме и после этого завершить программу.

def sum_number():
    user_num = 0
    try:
        while True:
            for num in map(int, input('Введите числа через пробел. Что бы выйти из программы, введите любой другой '
                                      'символ').split()):
                user_num += num
            print(user_num)
    except ValueError:
        return str(user_num) + ' ' + 'Программа завершена'


print(sum_number())


#
#
#
#

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую его же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.


def int_func(string_user):
    return string_user.title()

print(int_func(input('Введите слово из маленьких латинских букв')))

# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки, но каждое слово
# должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().


def variety_int_func(input_user_variety):
    input_user_variety.split()
    return ''.join(input_user_variety)


print(variety_int_func(int_func(input('Введите множество слов, разделенных пробелом, состоящих из маленьких латинских '
                                      'букв'))))